// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_columns_from_sheet.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getColumnsFromSheet = `-- name: GetColumnsFromSheet :many
SELECT c.id, c.name, c.type, c.required, c.sheet_id, c.created_at, c.updated_at, c.source_column_id
FROM columns c
WHERE EXISTS (
    SELECT 1
    FROM sheets s
    WHERE s.id = c.sheet_id AND s.id = ?
)
`

func (q *Queries) GetColumnsFromSheet(ctx context.Context, id uuid.UUID) ([]Column, error) {
	rows, err := q.db.QueryContext(ctx, getColumnsFromSheet, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Column
	for rows.Next() {
		var i Column
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Type,
			&i.Required,
			&i.SheetID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.SourceColumnID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

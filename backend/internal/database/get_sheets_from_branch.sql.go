// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_sheets_from_branch.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getSheetsFromBranch = `-- name: GetSheetsFromBranch :many
select
    s.id, s.name, s.branch_id, s.created_at, s.updated_at
from branches b
join sheets s on b.id = s.branch_id and b.id = ?
`

func (q *Queries) GetSheetsFromBranch(ctx context.Context, id uuid.UUID) ([]Sheet, error) {
	rows, err := q.db.QueryContext(ctx, getSheetsFromBranch, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Sheet
	for rows.Next() {
		var i Sheet
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.BranchID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

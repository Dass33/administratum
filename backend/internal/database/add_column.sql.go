// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: add_column.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const addColumn = `-- name: AddColumn :one
INSERT INTO columns (id, name, type, required, sheet_id, created_at, updated_at, source_column_id)
VALUES (
    gen_random_uuid(),
    ?,
    ?,
    ?,
    ?,
    datetime('now'),
    datetime('now'),
    ?
)
RETURNING id, name, type, required, sheet_id, created_at, updated_at, source_column_id
`

type AddColumnParams struct {
	Name           string
	Type           string
	Required       bool
	SheetID        uuid.UUID
	SourceColumnID sql.NullString
}

func (q *Queries) AddColumn(ctx context.Context, arg AddColumnParams) (Column, error) {
	row := q.db.QueryRowContext(ctx, addColumn,
		arg.Name,
		arg.Type,
		arg.Required,
		arg.SheetID,
		arg.SourceColumnID,
	)
	var i Column
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Type,
		&i.Required,
		&i.SheetID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.SourceColumnID,
	)
	return i, err
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_tables_from_user.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getTablesFromUser = `-- name: GetTablesFromUser :many
select
    t.id id,
    game_url,
    t.created_at created_at,
    t.updated_at updated_at,
    t.name name
from user_tables ut
join tables t on t.id = ut.table_id and ut.user_id = ?
`

func (q *Queries) GetTablesFromUser(ctx context.Context, userID uuid.UUID) ([]Table, error) {
	rows, err := q.db.QueryContext(ctx, getTablesFromUser, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Table
	for rows.Next() {
		var i Table
		if err := rows.Scan(
			&i.ID,
			&i.GameUrl,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Name,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: create_branch.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createBranch = `-- name: CreateBranch :one
INSERT INTO branches (id, name, is_protected, table_id, created_at, updated_at)
VALUES (
    gen_random_uuid(),
    ?,
    ?,
    ?,
    datetime('now'),
    datetime('now')
)
RETURNING id, name, table_id, created_at, updated_at, is_protected
`

type CreateBranchParams struct {
	Name        string
	IsProtected bool
	TableID     uuid.UUID
}

func (q *Queries) CreateBranch(ctx context.Context, arg CreateBranchParams) (Branch, error) {
	row := q.db.QueryRowContext(ctx, createBranch, arg.Name, arg.IsProtected, arg.TableID)
	var i Branch
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.TableID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.IsProtected,
	)
	return i, err
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: create_column_data.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createColumnData = `-- name: CreateColumnData :one
INSERT INTO column_data (id, idx, value, type, column_id, created_at, updated_at)
VALUES (
    gen_random_uuid(),
    ?,
    ?,
    ?,
    ?,
    datetime('now'),
    datetime('now')
)
RETURNING id, idx, value, column_id, created_at, updated_at, type
`

type CreateColumnDataParams struct {
	Idx      int64
	Value    sql.NullString
	Type     sql.NullString
	ColumnID uuid.UUID
}

func (q *Queries) CreateColumnData(ctx context.Context, arg CreateColumnDataParams) (ColumnDatum, error) {
	row := q.db.QueryRowContext(ctx, createColumnData,
		arg.Idx,
		arg.Value,
		arg.Type,
		arg.ColumnID,
	)
	var i ColumnDatum
	err := row.Scan(
		&i.ID,
		&i.Idx,
		&i.Value,
		&i.ColumnID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Type,
	)
	return i, err
}

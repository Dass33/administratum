// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_branches_from_table.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getBranchesFromTable = `-- name: GetBranchesFromTable :many
select id, name, table_id, created_at, updated_at from branches
where table_id = ?
`

func (q *Queries) GetBranchesFromTable(ctx context.Context, tableID uuid.UUID) ([]Branch, error) {
	rows, err := q.db.QueryContext(ctx, getBranchesFromTable, tableID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Branch
	for rows.Next() {
		var i Branch
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.TableID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

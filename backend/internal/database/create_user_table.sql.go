// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: create_user_table.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createUserTable = `-- name: CreateUserTable :one
INSERT INTO user_tables (user_id, table_id, permission, created_at, updated_at)
VALUES (
    ?,
    ?,
    ?,
    datetime('now'),
    datetime('now')
)
RETURNING user_id, table_id, permission, created_at, updated_at
`

type CreateUserTableParams struct {
	UserID     uuid.UUID
	TableID    uuid.UUID
	Permission string
}

func (q *Queries) CreateUserTable(ctx context.Context, arg CreateUserTableParams) (UserTable, error) {
	row := q.db.QueryRowContext(ctx, createUserTable, arg.UserID, arg.TableID, arg.Permission)
	var i UserTable
	err := row.Scan(
		&i.UserID,
		&i.TableID,
		&i.Permission,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
